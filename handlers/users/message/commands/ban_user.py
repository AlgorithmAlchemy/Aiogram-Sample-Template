from aiogram import types
from aiogram.types import ParseMode
import logging

from data.config import config
from loader import dp
from models.user import User
from filters.admin_filter import AdminFilter

logger = logging.getLogger(__name__)


class BanUserCommand:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ban_user"""
    
    @staticmethod
    async def handle(message: types.Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ban_user"""
        if message.from_user.id not in config.admin.owner_ids:
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        args = message.get_args().split()
        if not args:
            await message.answer(
                "üö´ <b>–ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <code>/ban_user [ID/username] [–ø—Ä–∏—á–∏–Ω–∞]</code>\n\n"
                "–ü—Ä–∏–º–µ—Ä—ã:\n"
                "<code>/ban_user 123456789</code>\n"
                "<code>/ban_user @username</code>\n"
                "<code>/ban_user 123456789 –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª</code>",
                parse_mode=ParseMode.HTML
            )
            return
        
        target = args[0]
        reason = " ".join(args[1:]) if len(args) > 1 else "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
        
        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if target.startswith('@'):
                # –ü–æ username
                username = target[1:]
                user = User.get_or_none(User.username == username)
                if not user:
                    await message.answer(
                        f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
                    )
                    return
                user_id = user.user_id
            else:
                # –ü–æ ID
                try:
                    user_id = int(target)
                except ValueError:
                    await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
                    return
                
                user = User.get_or_none(User.user_id == user_id)
                if not user:
                    await message.answer(
                        f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
                    )
                    return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω –∑–∞–±–∞–Ω–∏—Ç—å —Å–∞–º —Å–µ–±—è
            if user_id == message.from_user.id:
                await message.answer("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —Å–∞–º–∏ —Å–µ–±—è!")
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω –∑–∞–±–∞–Ω–∏—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–¥–º–∏–Ω–∞
            if user_id in config.admin.owner_ids:
                await message.answer("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
                return
            
            # –ë–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.ban()
            
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            logger.info(
                f"Admin {message.from_user.id} banned user {user_id}. "
                f"Reason: {reason}"
            )
            
            await message.answer(
                f"‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω</b>\n\n"
                f"<b>ID:</b> <code>{user_id}</code>\n"
                f"<b>–ò–º—è:</b> {user.first_name}\n"
                f"<b>Username:</b> @{user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
                f"<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {reason}\n"
                f"<b>–ó–∞–±–∞–Ω–∏–ª:</b> {message.from_user.first_name}",
                parse_mode=ParseMode.HTML
            )
            
        except Exception as e:
            logger.error(f"Error banning user {target}: {e}")
            await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
@dp.message_handler(AdminFilter(), commands=['ban_user'])
async def ban_user_cmd(message: types.Message):
    await BanUserCommand.handle(message)
