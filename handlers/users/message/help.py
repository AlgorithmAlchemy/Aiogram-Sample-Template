from aiogram import types
from aiogram.types import ParseMode

from data import config
from loader import dp, bot
from keyboards.inline.keyboards import get_back_keyboard

import logging

logger = logging.getLogger(__name__)


@dp.message_handler(commands=['help'], chat_type='private')
async def help_cmd_message(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    logger.info(f"User {user_id} requested help")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    for admin_id in config.OWNER:
        if int(admin_id) == int(chat_id):
            # –ê–¥–º–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞
            await bot.send_message(
                chat_id, 
                config.admin_help_ru, 
                parse_mode=ParseMode.HTML
            )
            return
    
    # –û–±—ã—á–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await bot.send_message(
        chat_id, 
        config.help_rus,
        parse_mode=ParseMode.HTML,
        reply_markup=get_back_keyboard()
    )


@dp.message_handler(commands=['commands'], chat_type='private')
async def commands_cmd_message(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /commands - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
    commands_text = """
<b>üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/menu - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
/about - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/commands - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã

<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/profile - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å
/settings - –û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

<b>–ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
/users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> {support}
""".format(support=config.SUPPORT)
    
    await message.answer(
        commands_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_back_keyboard()
    )


@dp.message_handler(commands=['profile'], chat_type='private')
async def profile_cmd_message(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = message.from_user
    
    profile_text = f"""
<b>üìã –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>

<b>ID:</b> <code>{user.id}</code>
<b>–ò–º—è:</b> {user.first_name}
<b>–§–∞–º–∏–ª–∏—è:</b> {user.last_name or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
<b>Username:</b> @{user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}
<b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {message.date.strftime('%d.%m.%Y %H:%M')}

<b>–°—Ç–∞—Ç—É—Å:</b> {'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' if user.id in config.OWNER else 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}

<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:</b>
<b>–¢–∏–ø —á–∞—Ç–∞:</b> {message.chat.type}
<b>ID —á–∞—Ç–∞:</b> <code>{message.chat.id}</code>
"""
    
    await message.answer(
        profile_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_back_keyboard()
    )
